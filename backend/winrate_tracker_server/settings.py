"""
Django settings for winrate_tracker_server project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import json
import os
from dotenv import load_dotenv
from pathlib import Path
from aws_utils import AWSUtils

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Build env file
# If secrets exist, don't go to AWS param store
secrets_file = BASE_DIR / '../backend-secrets.json'
if not os.path.isfile(secrets_file):
    utils = AWSUtils()
    ec2_ip = utils.get_ssm_parameter('/ow_winrate_tracker/backend_url')
else:
    with open(secrets_file, 'r') as file:
        data = json.load(file)
        ec2_ip = data["EC2_IP"]

# Write to env file and load it
with open(BASE_DIR / '.env', 'w') as be_env:
    be_env.writelines(f'EC2_IP="{ec2_ip}"')
load_dotenv()

# Create env file for FE
with open(BASE_DIR.parent / "frontend/.env", "w") as fe_env:
    fe_env.writelines(f"REACT_APP_BACKEND_URL=http://{ec2_ip}:8000/tracker")

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# TODO SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-i$9&1h17x_k@jr9z7(@7_b3!$+emdfp(f+4yj@j&=m^3o++$x1"

# TODO SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# TODO add to terraform
ALLOWED_HOSTS = [
    "127.0.0.1",
    "localhost",
    ec2_ip
    ]


# Application definition

INSTALLED_APPS = [
    "corsheaders",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "rest_framework",
]

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

# CORS configs
# Do not add a `/` at the end!!
# TODO cleaup
CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",
    "http://127.1.0.0:3000",
    f"http://{ec2_ip}",
    f"http://{ec2_ip}:3000",
    f"https://{ec2_ip}",
    f"https://{ec2_ip}:3000"
]
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOW_HEADERS = ["*"]

ROOT_URLCONF = "winrate_tracker_server.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "winrate_tracker_server.wsgi.application"

# Caching for currently CSV db
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.redis.RedisCache',
        'LOCATION': 'redis://127.0.0.1:6379/1',  # Redis running locally on port 6379
        'TIMEOUT': 3600,  # Cache timeout in seconds (1 hour)
        'OPTIONS': {
            'CLIENT_CLASS': 'django_redis.client.DefaultClient',
        }
    }
}

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
